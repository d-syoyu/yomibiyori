{
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(pytest:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: add theme retrieval API endpoint\n\nImplement GET /api/v1/themes/today endpoint to retrieve today''s theme.\nThis fixes the UI/backend integrity issue where the frontend expected\ntheme data but the backend had no retrieval endpoint.\n\n- Add ThemeResponse schema for API responses\n- Add get_today_theme service with timezone-aware logic\n- Add /themes/today endpoint returning most recent theme for today\n- Add comprehensive test coverage (3 test cases)\n- Register themes router in main API router\n\nAll tests passing (3/3).\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(railway service:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: add nixpacks.toml for Railway deployment\n\nRailway was failing with ''uvicorn: command not found'' error.\nAdded nixpacks.toml to explicitly configure:\n- Python 3.11 environment\n- Proper dependency installation via pip\n- Correct start command for uvicorn\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "Bash(railway logs:*)",
      "WebFetch(domain:yomibiyori-production.up.railway.app)",
      "Bash(railway status:*)",
      "Bash(railway run:*)",
      "Bash(tree:*)",
      "Bash(find:*)",
      "Bash(pip install:*)",
      "Bash(railway variables:*)",
      "Bash(timeout 15 bash:*)",
      "Bash(timeout 10 bash:*)",
      "Bash(echo:*)",
      "Bash(timeout 20 bash:*)",
      "Bash(gh workflow:*)",
      "WebFetch(domain:docs.x.ai)",
      "WebSearch",
      "Bash(curl:*)",
      "Bash(THEME_AI_PROVIDER=openai python -X utf8 -c:*)",
      "Bash(/bashes)",
      "Bash(node --version:*)",
      "Bash(npm --version)",
      "Bash(npx create-expo-app@latest mobile --template blank-typescript --no-install)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npx tsc:*)",
      "Bash(del:*)",
      "Bash(npx expo install:*)",
      "Bash(npm start)",
      "Bash(psql:*)",
      "Bash(for cat in \"ÊÅãÊÑõ\" \"Â≠£ÁØÄ\" \"Êó•Â∏∏\" \"„É¶„Éº„É¢„Ç¢\")",
      "Bash(do echo \"=== $cat ===\")",
      "Bash(done)",
      "Bash(PYTHONIOENCODING=utf-8 python:*)",
      "Bash(git checkout:*)",
      "Bash(git restore:*)",
      "Bash(THEME_ID=\"fcb377b4-3726-406f-8cef-06000caa4742\" echo \"=== 1. Get works for this theme ===\" curl -s \"https://yomibiyori-production.up.railway.app/api/v1/works?theme_id=$THEME_ID&limit=10\")",
      "Read(//c/**)",
      "Bash(if exist nul del nul)",
      "Bash(dir:*)",
      "Bash(gh secret set:*)",
      "Bash(where gh:*)",
      "Bash(winget install:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" --version)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth login)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth login --with-token)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set DATABASE_URL)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set REDIS_URL)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set REDIS_RANKING_PREFIX)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_URL)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_ANON_KEY)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_SERVICE_ROLE_KEY)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_JWT_SECRET)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_PROJECT_REF)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_JWT_AUDIENCE)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_JWKS_URL)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_REQUEST_TIMEOUT)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set SUPABASE_JWKS_CACHE_TTL)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set THEME_GENERATION_MAX_RETRIES)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set THEME_GENERATION_RETRY_DELAY_SECONDS)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set THEME_AI_PROVIDER)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set OPENAI_API_KEY)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set OPENAI_MODEL)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set OPENAI_TIMEOUT)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set ANTHROPIC_API_KEY)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set CLAUDE_MODEL)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set CLAUDE_TIMEOUT)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set XAI_API_KEY)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set XAI_MODEL)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set XAI_TIMEOUT)",
      "Bash(DATABASE_URL=\"sqlite:///./test.db\" pytest:*)",
      "Bash(DATABASE_URL=\"sqlite:///./test.db\" python scripts/send_theme_release_notification.py:*)",
      "Bash(DATABASE_URL=\"sqlite:///./test.db\" python:*)",
      "Bash(DATABASE_URL=\"sqlite:///./test.db\" EXPO_ACCESS_TOKEN=\"test-token\" python scripts/send_submission_reminder.py:*)",
      "Bash(DATABASE_URL=\"sqlite:///./test.db\" EXPO_ACCESS_TOKEN=\"test-token\" python scripts/finalize_rankings.py:*)",
      "Bash(DATABASE_URL=\"sqlite:///./test.db\" REDIS_URL=\"redis://localhost:6379/0\" EXPO_ACCESS_TOKEN=\"test-token\" python:*)",
      "Bash(gh secret list:*)"
    ],
    "deny": [],
    "ask": []
  }
}
